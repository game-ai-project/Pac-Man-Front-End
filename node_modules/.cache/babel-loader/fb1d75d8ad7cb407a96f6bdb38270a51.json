{"ast":null,"code":"var _jsxFileName = \"/Users/masakiito/Pac-Man-Front-End/src/TwitchView.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TwitchView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListening: false\n    };\n  }\n  componentWillMount() {\n    const Recognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    // const socket = io(\"http://example.com/\");\n\n    this._recognizer = new Recognition();\n    this._recognizer.onend = event => {\n      this.setState({\n        isListening: false\n      });\n    };\n    this._recognizer.onresult = event => {\n      console.log(event.results[0][0].transcript);\n\n      // socket.emit(\"post\", {message: event.results[0][0].transcript})\n    };\n\n    console.log(this._recognizer);\n  }\n  render() {\n    const {\n      isListening\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isListening,\n        onClick: this.recognise,\n        className: \"rounded-corner\",\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TwitchView;","map":{"version":3,"names":["React","Component","TwitchView","constructor","props","state","isListening","componentWillMount","Recognition","window","SpeechRecognition","webkitSpeechRecognition","_recognizer","onend","event","setState","onresult","console","log","results","transcript","render","recognise"],"sources":["/Users/masakiito/Pac-Man-Front-End/src/TwitchView.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\n\n\nclass TwitchView extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isListening: false\n    };\n  }\n\n  componentWillMount() {\n    const Recognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    // const socket = io(\"http://example.com/\");\n\n    this._recognizer = new Recognition();\n\n    this._recognizer.onend = (event) => {\n      this.setState({isListening: false})\n    }\n\n    this._recognizer.onresult = (event) => {\n      console.log(event.results[0][0].transcript);\n\n      // socket.emit(\"post\", {message: event.results[0][0].transcript})\n    }\n\n    console.log(this._recognizer);\n  }\n\n\n  render() {\n    const { isListening } = this.state;\n    return (\n      <div>\n        <br />\n        <button disabled={isListening} onClick={this.recognise} className=\"rounded-corner\">\n          Record\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default TwitchView;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC;AAGnB,MAAMC,UAAU,SAASD,SAAS,CAAC;EAEjCE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,WAAW,EAAE;IACf,CAAC;EACH;EAEAC,kBAAkB,GAAG;IACnB,MAAMC,WAAW,GAAGC,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB;IAC9E;;IAEA,IAAI,CAACC,WAAW,GAAG,IAAIJ,WAAW,EAAE;IAEpC,IAAI,CAACI,WAAW,CAACC,KAAK,GAAIC,KAAK,IAAK;MAClC,IAAI,CAACC,QAAQ,CAAC;QAACT,WAAW,EAAE;MAAK,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,CAACM,WAAW,CAACI,QAAQ,GAAIF,KAAK,IAAK;MACrCG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC;;MAE3C;IACF,CAAC;;IAEDH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,WAAW,CAAC;EAC/B;EAGAS,MAAM,GAAG;IACP,MAAM;MAAEf;IAAY,CAAC,GAAG,IAAI,CAACD,KAAK;IAClC,oBACE;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,QAAQ,EAAEC,WAAY;QAAC,OAAO,EAAE,IAAI,CAACgB,SAAU;QAAC,SAAS,EAAC,gBAAgB;QAAA,UAAC;MAEnF;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEA,eAAepB,UAAU"},"metadata":{},"sourceType":"module"}