[{"/Users/masakiito/Pac-Man-Front-End/src/index.js":"1","/Users/masakiito/Pac-Man-Front-End/src/reportWebVitals.js":"2","/Users/masakiito/Pac-Man-Front-End/src/App.js":"3","/Users/masakiito/Pac-Man-Front-End/src/VoiceComponent.js":"4","/Users/masakiito/Pac-Man-Front-End/src/TwitchView.js":"5"},{"size":535,"mtime":1666839406228,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1666839406228,"results":"8","hashOfConfig":"7"},{"size":2030,"mtime":1673486948284,"results":"9","hashOfConfig":"7"},{"size":1247,"mtime":1673486888385,"results":"10","hashOfConfig":"7"},{"size":463,"mtime":1673440360493,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1i6nwkr",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/masakiito/Pac-Man-Front-End/src/index.js",[],["25","26"],"/Users/masakiito/Pac-Man-Front-End/src/reportWebVitals.js",[],"/Users/masakiito/Pac-Man-Front-End/src/App.js",["27","28"],"/Users/masakiito/Pac-Man-Front-End/src/VoiceComponent.js",["29","30"],"import React, { Component } from \"react\";\nimport io, { Socket } from 'socket.io-client';\nimport './App.css';\n\n\nclass VoiceComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lang: props.lang || \"en-US\",\n      isListening: false\n    };\n  }\n\n  componentWillMount() {\n\t\tconst Recognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\t\tconst socket = io(\"wss://28fe-133-19-43-10.jp.ngrok.io\");\n\n    this._recognizer = new Recognition();\n\n\t\tthis._recognizer.onend = (event) => {\n\t\t\tthis.setState({isListening: false})\n\t\t}\n\n\t\tthis._recognizer.onresult = (event) => {\n    \tconsole.log(event.results[0][0].transcript);\n\n\t\t\tsocket.emit(\"post\", {message: event.results[0][0].transcript})\n  \t}\n\n\t\tconsole.log(this._recognizer);\n  }\n\n\trecognise = () => {\n\n\t\tif (this.state.isListening == false) {\n\t\t\tthis.setState({isListening: true})\n\t\t  this._recognizer.lang = this.state.lang;\n\t\t\tthis._recognizer.start();\n\t\t}\n\t}\n\n\n  render() {\n    const { isListening } = this.state;\n    return (\n      <div>\n        <br />\n        <button disabled={isListening} onClick={this.recognise} className=\"rounded-corner\">\n          Record\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default VoiceComponent;\n","/Users/masakiito/Pac-Man-Front-End/src/TwitchView.js",["31","32"],"import React, { Component, useRef } from \"react\";\nimport { TwitchPlayer } from 'react-twitch-embed'\n\n\nclass TwitchView extends Component {\n\tconstructor(props) {\n    super(props);\n\n  }\n\n\trender() {\n  \treturn (\n\t\t\t\t<TwitchPlayer\n          channel=\"petepittawat\"\n          width=\"100%\"\n          height=\"100%\"\n\t\t\t\t\tmuted={this.props.muted}\n\t\t\t\t\thideControls={true}\n          parent={['codesandbox.io', 'localhost']}\n        />\n  \t);\n\t}\n}\n\nexport default TwitchView;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":19,"column":24,"nodeType":"39","messageId":"40","endLine":19,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":29,"column":11,"nodeType":"43","messageId":"44","endLine":29,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":2,"column":14,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},{"ruleId":"37","severity":1,"message":"38","line":38,"column":30,"nodeType":"39","messageId":"40","endLine":38,"endColumn":32},{"ruleId":"41","severity":1,"message":"46","line":1,"column":28,"nodeType":"43","messageId":"44","endLine":1,"endColumn":34},{"ruleId":"47","severity":1,"message":"48","line":6,"column":2,"nodeType":"49","messageId":"50","endLine":9,"endColumn":4},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'muted' is assigned a value but never used.","Identifier","unusedVar","'Socket' is defined but never used.","'useRef' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]