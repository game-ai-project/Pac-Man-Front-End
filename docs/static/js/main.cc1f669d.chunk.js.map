{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","className","src","height","width","allowfullscreen","id","class","type","for","name","min","max","onClick","SpeechRecognition","startListening","language","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4OAuEeA,MAlEf,WACC,MAKKC,iCAJFC,EAAU,EAAVA,WAMF,OALW,EAATC,UACe,EAAfC,gBACgC,EAAhCC,iCAQA,sBAAKC,UAAU,MAAK,UACpB,qBAAKA,UAAU,cAAa,SAC5B,wBACGC,IAAI,uFACJC,OAAO,MACPC,MAAM,MACNC,iBAAe,MAIlB,sBAAKJ,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,cAAa,UAC1B,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,oBAAmB,SAAC,4BAAG,kBACtC,qBAAKA,UAAU,gBAAe,SAAC,yIAC/B,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,gBAAe,UAAC,aAAU,4BAAG,aAAY,0DAE1D,sBAAKA,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,cAAa,SAAC,4BAAG,qBAChC,sBAAKA,UAAU,cAAa,UAC1B,sBAAKA,UAAU,gBAAe,UAC1B,uBAAOK,GAAG,SAASC,MAAM,eAAeC,KAAK,aAC7C,uBAAOC,IAAI,SAASF,MAAM,oBAE9B,qBAAKN,UAAU,UAAS,SAAC,oCAE3B,qBAAKA,UAAU,eAAc,SAAC,WAC9B,sBAAKA,UAAU,gBAAe,UAC5B,8BAAK,MACH,uBAAOO,KAAK,QAAQE,KAAK,QAAQC,IAAI,IAAIC,IAAI,QAC/C,8BAAK,cAGT,sBAAKX,UAAU,aAAY,UACzB,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,mBAAkB,SAAC,4BAAG,iBACrC,+BACI,6BAAI,6CACJ,6BAAI,6CACJ,6BAAI,mDAGV,sBAAKA,UAAU,SAAQ,UACnB,wBAAQM,MAAM,iBAAiBM,QAASC,IAAkBC,eAAe,CAACC,SAAU,OAAO,SAAC,WAC9F,4BAAInB,aAlDD,+BAAM,+CAuDjB,ECzDeoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORd,G","file":"static/js/main.cc1f669d.chunk.js","sourcesContent":["import React, { Component }  from 'react';\nimport { TwitchStream } from 'react-twitch-stream';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport './App.css';\n\nfunction App() {\n\tconst {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <div className=\"App\">\n\t\t  <div className=\"Twitch-view\">\n\t\t\t\t<iframe\n\t\t\t    src=\"https://player.twitch.tv/?channel=dep_ow&parent=game-ai-project.github.io&muted=true\"\n\t\t\t    height=\"720\"\n\t\t\t    width=\"720\"\n\t\t\t    allowfullscreen>\n\t\t\t\t</iframe>\n\t\t  </div>\n\t\t  \n\t\t  <div className=\"User-interface\">\n\t\t    <div className=\"Instruction\">\n\t\t      <div className=\"Instruction-space\" />\n\t\t      <div className=\"Instruction-title\"><b>Instruction</b></div>\n\t\t      <div className=\"Instruction-1\">The game will be automatically played by Al.By cheering/boo with your own voice, you can give advantages/disadvantages to Ms PAC-MAN</div>\n\t\t      <div className=\"Instruction-space\" />\n\t\t      <div className=\"Instruction-2\">Press the <b>\"Record\"</b> button and cheer/ooo with your passionate voicel</div>\n\t\t    </div>\n\t\t    <div className=\"Audio-settings\">\n\t\t      <div className=\"Audio-space\" />\n\t\t      <div className=\"Audio-title\"><b>Audio settings</b></div>\n\t\t      <div className=\"Audio-items\">\n\t\t        <div className=\"toggle_button\">\n              <input id=\"toggle\" class=\"toggle_input\" type='checkbox' />\n              <label for=\"toggle\" class=\"toggle_label\"/>\n            </div>\n\t\t        <div className=\"Audio-1\">Turn on/off background music</div>\n\t\t      </div>\n\t\t      <div className=\"Audio-volume\">Volume</div>\n\t\t      <div className=\"Volume-slider\">\n\t\t        <div>0</div>\n         \t  <input type=\"range\" name=\"speed\" min=\"0\" max=\"100\"/>\n\t\t        <div>100</div>\n\t\t      </div>\n\t\t    </div>\n\t\t    <div className=\"Action-log\">\n\t\t      <div className=\"Action-log-space\" />\n\t\t      <div className=\"Action-log-title\"><b>Action log</b></div>\n\t\t      <ul>\n            <li>18/11/2022 10:00:32 Ms. PAC-MAN Get Boo!</li>\n            <li>18/11/2022 10:00:32 Ms. PAC-MAN Get Boo!</li>\n            <li>18/11/2022 10:00:32 Ms. PAC-MAN Get Boo!</li>\n          </ul>\n\t\t    </div>\n\t\t    <div className=\"Record\">\n          <button class=\"rounded-corner\" onClick={SpeechRecognition.startListening({language: 'en'})}>Record</button>\n\t\t      <p>{transcript}</p>\n\t\t    </div>\n\t\t  </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}