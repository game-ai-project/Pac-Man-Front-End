{"version":3,"sources":["Twitch_view.png","ToggleSwitchButton.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","ToggleSwitchButton","styled","div","_templateObject","Object","taggedTemplateLiteral","_ref","className","handleChange","react_default","a","createElement","id","type","onChange","htmlFor","App","src","twitch_view","src_ToggleSwitchButton","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mNCiDzBC,QA9CkBC,EAAOC,IAAGC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,gtBAsChB,SAAHE,GAAA,IAAMC,EAASD,EAATC,UAAWC,EAAYF,EAAZE,aAAY,OACpDC,EAAAC,EAAAC,cAAA,OAAKJ,UAAWA,GACfE,EAAAC,EAAAC,cAAA,SAAOC,GAAG,WAAWC,KAAK,WAAWC,SAAUN,IAC/CC,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,uCCZFC,MA3Bf,WACE,OACEP,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,OACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,eACbE,EAAAC,EAAAC,cAAA,OAAKM,IAAKC,IAAaX,UAAU,aAGnCE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,eACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,qBAAoBE,EAAAC,EAAAC,cAAA,yBACnCF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAe,wIAC9BE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,sBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,iBAAe,aAAWE,EAAAC,EAAAC,cAAA,qBAAe,sDAE1DF,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,kBACbE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,gBACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,eAAcE,EAAAC,EAAAC,cAAA,4BAC7BF,EAAAC,EAAAC,cAACQ,EAAkB,OAErBV,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,eACfE,EAAAC,EAAAC,cAAA,OAAKJ,UAAU,cCdNa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCxB,EAAAyB,EAAA,GAAAC,KAAA1B,EAAA2B,KAAA,UAAqBD,KAAK,SAAAlB,GAAiD,IAA9CoB,EAAMpB,EAANoB,OAAQC,EAAMrB,EAANqB,OAAQC,EAAMtB,EAANsB,OAAQC,EAAMvB,EAANuB,OAAQC,EAAOxB,EAAPwB,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1B,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,WAAU,KACf3B,EAAAC,EAAAC,cAAC0B,EAAG,QAORjB","file":"static/js/main.39e2c3f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Twitch_view.43ff8e8f.png\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledToggleSwitchButton = styled.div`\n\t& input {\n\t\tdisplay: none;\n\t\t&:checked + label {\n\t\t\tbackground-color: #003366;\n\t\t\t&::before {\n\t\t\t\tleft: 2em;\n\t\t\t}\n\t\t}\n\t}\n\n\t& label {\n\t\tbackground-color: #ff9933;\n\t\tborder-radius: 2em;\n\t\tborder: 2px solid var(--text-color);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t\theight: 2em;\n\t\tposition: relative;\n\t\ttransition: .5s;\n\t\twidth: 3.75em;\n\n\t\t&::before {\n\t\t\tbackground: #fff;\n\t\t\tborder-radius: 100%;\n\t\t\tcontent: '';\n\t\t\tdisplay: inline-block;\n\t\t\theight: 1.5em;\n\t\t\tposition: absolute;\n\t\t\tleft: 0.25em;\n\t\t\ttransition: .5s ease-out;\n\t\t\twidth: 1.5em;\n\t\t\tz-index: 2;\n\t\t}\n\t}\n`\n\nconst ToggleSwitchButton = ({ className, handleChange }) => (\n\t<div className={className}>\n\t\t<input id=\"btn-mode\" type=\"checkbox\" onChange={handleChange} />\n\t\t<label htmlFor=\"btn-mode\">\n    </label>\n\t</div>\n)\n\nexport default ToggleSwitchButton\n","import React, { Component }  from 'react';\nimport ToggleSwitchButton from './ToggleSwitchButton';\nimport twitch_view from './Twitch_view.png';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\t\t  <div className=\"Twitch-view\">\n\t\t    <img src={twitch_view} className=\"Pac-Man\" />\n\t\t  </div>\n\t\t  \n\t\t  <div className=\"User-interface\">\n\t\t    <div className=\"Instruction\">\n\t\t      <div className=\"Instruction-space\" />\n\t\t      <div className=\"Instruction-title\"><b>Instruction</b></div>\n\t\t      <div className=\"Instruction-1\">The game will be automatically played by Al.By cheering/boo with your own voice, you can give advantages/disadvantages to Ms PAC-MAN</div>\n\t\t      <div className=\"Instruction-space\" />\n\t\t      <div className=\"Instruction-2\">Press the <b>\"Record\"</b> button and cheer/ooo with your passionate voicel</div>\n\t\t    </div>\n\t\t    <div className=\"Audio-settings\">\n\t\t      <div className=\"Audio-space\" />\n\t\t      <div className=\"Audio-title\"><b>Audio settings</b></div>\n\t\t      <ToggleSwitchButton />\n\t\t    </div>\n\t\t    <div className=\"Action-log\" />\n\t\t    <div className=\"Record\" />\n\t\t  </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}