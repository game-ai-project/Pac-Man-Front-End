{"version":3,"sources":["VoiceComponent.js","TwitchView.js","App.js","reportWebVitals.js","index.js"],"names":["VoiceComponent","props","recognise","state","isListening","setState","_recognizer","lang","start","Recognition","window","SpeechRecognition","webkitSpeechRecognition","io","this","onend","event","onresult","console","log","results","transcript","disabled","onClick","className","Component","TwitchView","channel","width","height","muted","hideControls","parent","App","handleChange","id","class","type","onChange","for","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0PA2DeA,EAtDK,kDAElB,WAAYC,GAAQ,IAAD,EAMf,OANe,qBACjB,cAAMA,IA4BRC,UAAY,WAEoB,GAA1B,EAAKC,MAAMC,cACb,EAAKC,SAAS,CAACD,aAAa,IAC5B,EAAKE,YAAYC,KAAO,EAAKJ,MAAMI,KACnC,EAAKD,YAAYE,QAErB,EAjCE,EAAKL,MAAQ,CACXI,KAAMN,EAAMM,MAAQ,QACpBH,aAAa,GACb,CACJ,CA0CC,OA1CA,+CAED,WAAsB,IAAD,OACbK,EAAcC,OAAOC,mBAAqBD,OAAOE,wBACxCC,YAAG,4CAElBC,KAAKR,YAAc,IAAIG,EAEvBK,KAAKR,YAAYS,MAAQ,SAACC,GACxB,EAAKX,SAAS,CAACD,aAAa,GAC9B,EAEAU,KAAKR,YAAYW,SAAW,SAACD,GAE3BE,QAAQC,IAAIH,EAAMI,QAAQ,GAAG,GAAGC,WAGlC,EAEAH,QAAQC,IAAIL,KAAKR,YACnB,GAAC,oBAYD,WACE,IAAQF,EAAgBU,KAAKX,MAArBC,YACR,OACE,gCACE,uBACA,wBAAQkB,SAAUlB,EAAamB,QAAST,KAAKZ,UAAWsB,UAAU,iBAAgB,SAAC,aAKzF,KAAC,EAnDiB,CAASC,a,QCmBdC,EApBC,kDACf,WAAYzB,GAAQ,uCACXA,EAER,CAaA,OAbC,mCAEF,WACE,OACC,cAAC,IAAY,CACP0B,QAAQ,eACRC,MAAM,OACNC,OAAO,OACZC,MAAOhB,KAAKb,MAAM6B,MAClBC,cAAc,EACTC,OAAQ,CAAC,iBAAkB,cAGpC,KAAC,EAjBc,CAASP,aC4DVQ,EAzDN,kDACR,WAAYhC,GAAQ,IAAD,EAKd,OALc,qBAChB,cAAMA,IAQTiC,aAAe,SAAClB,GACS,GAApB,EAAKb,MAAM2B,MACd,EAAKzB,SAAS,CAACyB,OAAO,IAEtB,EAAKzB,SAAS,CAACyB,OAAO,GAGxB,EAbG,EAAK3B,MAAQ,CACd2B,OAAO,GACJ,CAEJ,CA8CA,OA9CC,mCAYF,WACmBhB,KAAKX,MAAf2B,MAEP,OACE,sBAAKN,UAAU,MAAK,UACpB,qBAAKA,UAAU,cAAa,SAC1B,cAAC,EAAU,CAACM,MAAOhB,KAAKX,MAAM2B,UAGhC,sBAAKN,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,cAAa,UAC1B,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,oBAAmB,SAAC,4BAAG,kBACtC,qBAAKA,UAAU,gBAAe,SAAC,yIAC/B,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,gBAAe,UAAC,aAAU,4BAAG,aAAY,0DAE1D,sBAAKA,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,cAAa,SAAC,4BAAG,qBAChC,sBAAKA,UAAU,cAAa,UAC1B,sBAAKA,UAAU,gBAAe,UAC1B,uBAAOW,GAAG,SAASC,MAAM,eAAeC,KAAK,WAAWC,SAAUxB,KAAKoB,eACvE,uBAAOK,IAAI,SAASH,MAAM,oBAE9B,qBAAKZ,UAAU,UAAS,SAAC,uCAG7B,qBAAKA,UAAU,SAAQ,SACrB,cAAC,EAAc,WAKvB,KAAC,EAtDO,CAASC,aCKHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORd,G","file":"static/js/main.aa857b1c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport io, { Socket } from 'socket.io-client';\nimport './App.css';\n\n\nclass VoiceComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lang: props.lang || \"en-US\",\n      isListening: false\n    };\n  }\n\n  componentWillMount() {\n    const Recognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const socket = io(\"wss://28fe-133-19-43-10.jp.ngrok.io:8000\");\n\n    this._recognizer = new Recognition();\n\n    this._recognizer.onend = (event) => {\n      this.setState({isListening: false})\n    }\n\n    this._recognizer.onresult = (event) => {\n\n      console.log(event.results[0][0].transcript);\n\n      // socket.emit(\"post\", {message: event.results[0][0].transcript})\n    }\n\n    console.log(this._recognizer);\n  }\n\n  recognise = () => {\n\n    if (this.state.isListening == false) {\n      this.setState({isListening: true})\n      this._recognizer.lang = this.state.lang;\n      this._recognizer.start();\n    }\n  }\n\n\n  render() {\n    const { isListening } = this.state;\n    return (\n      <div>\n        <br />\n        <button disabled={isListening} onClick={this.recognise} className=\"rounded-corner\">\n          Record\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default VoiceComponent;\n","import React, { Component, useRef } from \"react\";\nimport { TwitchPlayer } from 'react-twitch-embed'\n\n\nclass TwitchView extends Component {\n\tconstructor(props) {\n    super(props);\n\n  }\n\n\trender() {\n  \treturn (\n\t\t\t\t<TwitchPlayer\n          channel=\"petepittawat\"\n          width=\"100%\"\n          height=\"100%\"\n\t\t\t\t\tmuted={this.props.muted}\n\t\t\t\t\thideControls={true}\n          parent={['codesandbox.io', 'localhost']}\n        />\n  \t);\n\t}\n}\n\nexport default TwitchView;\n","import React, { Component }  from 'react';\nimport VoiceComponent from \"./VoiceComponent\";\nimport TwitchView from \"./TwitchView\";\nimport './App.css';\n\n\n// function App() {\nclass App extends Component {\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\tmuted: true\n    };\n\n  }\n\n\thandleChange = (event) => {\n\t\tif (this.state.muted == false) {\n\t\t\tthis.setState({muted: true})\n\t\t} else {\n\t\t\tthis.setState({muted: false})\n\t\t}\n\n\t}\n\n\n\trender() {\n\t\tconst { muted } = this.state;\n\n  \treturn (\n  \t  <div className=\"App\">\n\t\t\t  <div className=\"Twitch-view\">\n\t\t\t    <TwitchView muted={this.state.muted}/>\n\t\t\t  </div>\n\t\t\t  \n\t\t\t  <div className=\"User-interface\">\n\t\t\t    <div className=\"Instruction\">\n\t\t\t      <div className=\"Instruction-space\" />\n\t\t\t      <div className=\"Instruction-title\"><b>Instruction</b></div>\n\t\t\t      <div className=\"Instruction-1\">The game will be automatically played by Al.By cheering/boo with your own voice, you can give advantages/disadvantages to Ms PAC-MAN</div>\n\t\t\t      <div className=\"Instruction-space\" />\n\t\t\t      <div className=\"Instruction-2\">Press the <b>\"Record\"</b> button and cheer/boo with your passionate voicel</div>\n\t\t\t    </div>\n\t\t\t    <div className=\"Audio-settings\">\n\t\t\t      <div className=\"Audio-space\" />\n\t\t\t      <div className=\"Audio-title\"><b>Audio settings</b></div>\n\t\t\t      <div className=\"Audio-items\">\n\t\t\t        <div className=\"toggle_button\">\n  \t            <input id=\"toggle\" class=\"toggle_input\" type='checkbox' onChange={this.handleChange}/>\n  \t            <label for=\"toggle\" class=\"toggle_label\"/>\n  \t          </div>\n\t\t\t        <div className=\"Audio-1\">Turn on/off background music</div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t    <div className=\"Record\">\n\t\t\t      <VoiceComponent />\n\t\t\t    </div>\n\t\t\t  </div>\n  \t  </div>\n\t\t)\n\t};\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}